(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{318:function(t,s,a){"use strict";a.r(s);var e=a(14),n=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("本页最后更新于 LevelledMobs 3.10.3 b763\n")])])]),s("hr"),t._v(" "),s("h1",{attrs:{id:"规则配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#规则配置"}},[t._v("#")]),t._v(" 规则配置")]),t._v(" "),s("p",[t._v("LevelledMob 的 "),s("code",[t._v("rules.yml")]),t._v(" 文件允许你制作真正模块化的 "),s("strong",[t._v("自定义规则")]),t._v("，它可以修改或扩展应用于任何和所有 EntityType 的 "),s("strong",[t._v("默认规则")]),t._v("。\n规则文件分为三个主要部分："),s("strong",[t._v("预设")]),t._v("、"),s("strong",[t._v("默认规则")]),t._v("和"),s("strong",[t._v("自定义规则")]),t._v("。\n本文档提供了对规则文件如何工作的一般理解。")]),t._v(" "),s("p",[t._v("有关更多详细信息，请了解如何使用不同的"),s("a",{attrs:{href:"https://github.com/lokka30/LevelledMobs/wiki/Documentation---Conditions",target:"_blank",rel:"noopener noreferrer"}},[t._v("条件"),s("OutboundLink")],1),t._v("、"),s("a",{attrs:{href:"https://github.com/lokka30/LevelledMobs/wiki/Documentation---Strategies",target:"_blank",rel:"noopener noreferrer"}},[t._v("策略"),s("OutboundLink")],1),t._v("和"),s("a",{attrs:{href:"https://github.com/lokka30/LevelledMobs/wiki/Documentation---Apply-Settings",target:"_blank",rel:"noopener noreferrer"}},[t._v("应用设置"),s("OutboundLink")],1),t._v("。")]),t._v(" "),s("hr"),t._v(" "),s("h1",{attrs:{id:"通用生物群组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#通用生物群组"}},[t._v("#")]),t._v(" 通用生物群组:")]),t._v(" "),s("p",[t._v("LevelledMobs 包含多组实体，这些实体以易于识别的格式捆绑在一起。当使用"),s("code",[t._v("allowed-groups:")]),t._v("或"),s("code",[t._v("excluded-groups:")]),t._v("时，每个组都充当自己的EntityType，这允许你一次选择多个实体。 你可以合并"),s("code",[t._v("included-list:")]),t._v(" 或 "),s("code",[t._v("excluded-list:")]),t._v("来对组内的特定实体进行例外处理。")]),t._v(" "),s("p",[t._v("你还可以在规则文件中创建自己的实体或生物群系自定义分组。这些组目前无法在自定义掉落中使用，但将来可以访问；请稍后再回来查看！")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("实体类型通用群组")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[s("code",[t._v("all_mobs")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("所有实体，无论它们是否被等级化。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[s("code",[t._v("all_levellable_mobs")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("所有已经被等级化的实体。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[s("code",[t._v("all_hostile_mobs")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("所有敌对实体，无论它们是否被等级化。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[s("code",[t._v("all_passive_mobs")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("所有被动实体，无论它们是否被等级化。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[s("code",[t._v("all_overworld_mobs")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("所有主世界中的实体，无论它们是否被等级化。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[s("code",[t._v("all_nether_mobs")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("所有地狱中的实体，无论它们是否被等级化。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[s("code",[t._v("all_flying_mobs")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("所有飞行实体，无论它们是否被等级化。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[s("code",[t._v("all_ground_mobs")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("所有陆上的实体，无论它们是否被等级化。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[s("code",[t._v("all_aquatic_mobs")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("所有水生的实体，无论它们是否被等级化。")])])])]),t._v(" "),s("hr"),t._v(" "),s("h1",{attrs:{id:"预设"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#预设"}},[t._v("#")]),t._v(" 预设:")]),t._v(" "),s("p",[t._v("LM允许你将某些配置选项集成到称为"),s("strong",[t._v("预设")]),t._v("的集合中，这些预设可以在"),s("strong",[t._v("默认规则")]),t._v("或使用 "),s("code",[t._v("use-preset:")]),t._v(" 配置行的任何"),s("strong",[t._v("自定义规则")]),t._v("中应用。例如：")]),t._v(" "),s("div",{staticClass:"language-yml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("custom-rules")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("enabled")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'自定义规则'")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("use-preset")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" presetName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" otherPresetName\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("use-preset")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" presetName\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" otherPresetName\n")])])]),s("div",{staticClass:"language-yml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("presets")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("presetName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'预设名称'")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("system")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n")])])]),s("p",[s("strong",[t._v("预设")]),t._v("部分覆盖文件的前三分之一，默认情况下，它主要用于填充"),s("strong",[t._v("默认规则")]),t._v("，并为常见问题提供多种不同的开箱即用的解决方案！ 你可以编辑自己的预设或将其添加到列表中，也可以压根不使用预设系统。 这有助于防止规则文件中出现重复文本。")]),t._v(" "),s("p",[t._v("制作预设时，应遵循上述结构。 从"),s("code",[t._v("presets:")]),t._v("标签开始，缩进两个空格，然后为预设指定一个名称以供稍后引用，并将"),s("code",[t._v("presetName:")]),t._v("替换为该值。 确保该值仅使用字母数字值，不包含空格。\n紧接着，再缩进两个空格，你应该为你的预设指定一个易于阅读的"),s("code",[t._v("name:")]),t._v("。 尽管这不是必需的，但你稍后会感谢自己！\n最后，"),s("code",[t._v("system:")]),t._v("代表"),s("code",[t._v("conditions:")]),t._v("、"),s("code",[t._v("strategies:")]),t._v("和"),s("code",[t._v("apply-settings:")]),t._v("，具体取决于你想要构建的预设类型！")]),t._v(" "),s("h1",{attrs:{id:"默认规则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#默认规则"}},[t._v("#")]),t._v(" 默认规则：")]),t._v(" "),s("p",[t._v("LM 要求此部分填充以下最少的信息，以便使用最少的功能。 默认情况下，LM 使用上面解释的 "),s("strong",[t._v("预设")]),t._v(" 系统来使用必要的值以及其他几个值填充默认规则，以便快速轻松地在预配置设置之间切换。")]),t._v(" "),s("div",{staticClass:"language-yml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("default-rule")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("conditions")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("worlds")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("allowed-list")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'*'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("strategy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("random")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apply-settings")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("minLevel")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("maxLevel")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("25")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("multipliers")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("max-health")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5.0")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("movement-speed")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.15")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("attack-damage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.25")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ranged-attack-damage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.0")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("creeper-blast-damage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("item-drop")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("xp-drop")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nametag")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'&8&l༺ %tiered%Lvl %mob-lvl%&8 | &f%displayname%&8 | &f%entity-health-rounded% %tiered%%heart_symbol% &r%health-indicator% &8&l༻'")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("creature-death-nametag")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'%tiered%Lvl %mob-lvl%&8 | &f%entity-name%'")]),t._v("\n")])])]),s("h1",{attrs:{id:"自定义规则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自定义规则"}},[t._v("#")]),t._v(" 自定义规则：")]),t._v(" "),s("p",[t._v("LM 开箱即用，具有多种不同的"),s("strong",[t._v("自定义规则")]),t._v("，这些规则均可以被启用和禁用。\n这些用于实现特定结果，例如使用第一个自定义规则禁用被动实体的等级化，并提供如何以独特方式使用自定义规则的多个示例。")]),t._v(" "),s("h2",{attrs:{id:"优先级"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#优先级"}},[t._v("#")]),t._v(" 优先级：")]),t._v(" "),s("p",[t._v("默认情况下，LM 按线性顺序处理规则：从上到下； 从默认规则到第一条至最后一条自定义规则。 你可以在自定义规则中建立优先级配置行，该规则将覆盖其在队列中的位置，从而允许其比堆栈的其余部分更早或更晚处理。 请记住，默认规则将"),s("strong",[t._v("始终")]),t._v("在任何自定义规则之前被首先处理，以填充任何必要的默认值。\n下面展示了优先级如何改变自定义规则的“堆栈队列”的示例：")]),t._v(" "),s("div",{staticClass:"language-yml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("custom-rules")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("enabled")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'在堆栈之前运行，作为最高优先级，作为默认规则之后处理的第一条规则'")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("priority")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("enabled")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'在堆栈之前运行，在任何更高优先级之后运行'")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("priority")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("enabled")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'运行排队堆栈（与不列出优先级相同）'")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("priority")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("enabled")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'运行排队堆栈（与优先级相同：0）'")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("enabled")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'在堆栈之后、任何较低优先级之前运行'")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("priority")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("-1")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("enabled")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'在堆栈后面运行，优先级最低，在最后运行'")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("priority")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("-2")]),t._v("\n")])])]),s("p",[t._v("以下表示自定义规则的基本框架:")]),t._v(" "),s("div",{staticClass:"language-yml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("custom-rules")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("enabled")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("priority")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("use-preset")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("conditions")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("strategies")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apply-settings")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n")])])]),s("ul",[s("li",[s("code",[t._v("- enabled:")]),t._v(" - 这表示自定义规则会被启用还是禁用.")]),t._v(" "),s("li",[s("code",[t._v("priority:")]),t._v(" - 该值会覆盖自定义规则的处理顺序.")]),t._v(" "),s("li",[s("code",[t._v("name:")]),t._v(" - 这代表了用于调试目的的自定义规则的易于阅读的表示.")]),t._v(" "),s("li",[s("code",[t._v("use-preset:")]),t._v(" - 这允许你在自定义规则中使用预设.")]),t._v(" "),s("li",[s("code",[t._v("conditions:")]),t._v(", "),s("code",[t._v("strategies:")]),t._v(", 及 "),s("code",[t._v("apply-settings:")]),t._v(" - "),s("a",{attrs:{href:"#"}},[t._v("这里有更为详细的说明")]),t._v(".")])]),t._v(" "),s("p",[t._v("在构建应用于实体的最终自定义规则时，自定义规则中未明确列出的任何详细信息都将从默认规则中收集该信息。 例如：")]),t._v(" "),s("div",{staticClass:"language-yml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("default-rule")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("conditions")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("worlds")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("allowed-list")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'*'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("entities")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("allowed-list")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'all_mobs'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("custom-rules")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("enabled")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'禁用被动实体'")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("conditions")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("entities")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("allowed-list")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'all_passive_mobs'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apply-settings")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("maxLevel")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n")])])]),s("p",[t._v("上面结构的解读方式，从默认规则开始：所有世界都是等级化的，所有实体都是基于默认规则的等级化的。 制定自定义规则时，我不需要指定规则将应用于哪个世界，因为它从默认规则中获取值“所有世界”。 但是，我必须指定实体，因为如果我不指定，自定义规则将适用于默认规则中所述的“所有实体”。 最后，我应用了级别"),s("code",[t._v("0")]),t._v("，它禁用了所有世界中被动实体的等级化。")]),t._v(" "),s("hr"),t._v(" "),s("blockquote",[s("p",[t._v("注意：某些配置选项使用自定义"),s("code",[t._v("MODALLIST")]),t._v("来配置。"),s("br"),t._v("\n下面演示如何使用 MODALLIST 功能:")])]),t._v(" "),s("div",{staticClass:"language-yml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yml"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("allowed-list")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("allowed-groups")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("excluded-list")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("excluded-groups")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("merge")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n")])])]),s("p",[s("code",[t._v("MODALLIST")]),t._v(" 配置选项的阅读相当简单，因为它们仅在条件部分中使用。\n如果配置选项需要使用 "),s("code",[t._v("MODALLIST")]),t._v(" , 例如 "),s("code",[t._v("entities:")]),t._v(" 和 "),s("code",[t._v("worlds:")]),t._v(", 那么你使用哪个配置选项取决于你的需求。")]),t._v(" "),s("p",[s("strong",[t._v("示例:")]),t._v(" 如果要检查条件是否满足一个实体是僵尸，你将使用 allowed-list:，意味着列表只允许你批准的满足条件的实体。")]),t._v(" "),s("p",[s("strong",[t._v("示例:")]),t._v(" 如果你希望条件适用于除僵尸之外的所有实体，那么你可以使用"),s("code",[t._v("excluded-list:")]),t._v(", 这意味着该列表将使用除你排除满足条件的实体之外的所有实体。")]),t._v(" "),s("p",[s("strong",[t._v("示例:")]),t._v(" 如果要应用于 all_passive_mobs 组，但要跳过鸡，则可以使用 "),s("code",[t._v("allowed-groups:")]),t._v(" 和 "),s("code",[t._v("excluded-list:")]),t._v(",你将允许组中的所有被动实体满足条件，而你的"),s("code",[t._v("excluded-list:")]),t._v("将在最终处理之前被删除。")]),t._v(" "),s("p",[t._v("某些"),s("code",[t._v("MODALLIST")]),t._v("配置选项无法使用'-groups'行，因为这些选项仅限于实体和生物群系自定义或通用组。 如果你希望组合默认规则和自定义规则中两个不同"),s("code",[t._v("MODALLIST")]),t._v("的列表，则只需在配置列表的末尾添加"),s("code",[t._v("merge: true")]),t._v("行即可将两者组合在一起。")])])}),[],!1,null,null,null);s.default=n.exports}}]);