(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{337:function(t,s,a){"use strict";a.r(s);var e=a(14),n=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("此页面最后更新为 LevelledMobs 3.9.3 b735\n")])])]),s("hr"),t._v(" "),s("h1",{attrs:{id:"了解默认的-rules-yml-配置文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#了解默认的-rules-yml-配置文件"}},[t._v("#")]),t._v(" 了解默认的 "),s("code",[t._v("rules.yml")]),t._v(" 配置文件")]),t._v(" "),s("p",[t._v("LevelledMobs 的 "),s("code",[t._v("rules.yml")]),t._v(" 文件允许你创建真正模块化的 "),s("strong",[t._v("自定义规则")]),t._v("，这些规则可以修改或扩展应用于任何和所有 EntityTypes 的 "),s("strong",[t._v("默认规则")]),t._v("。\n该规则文件分为三个主要部分："),s("strong",[t._v("预设规则")]),t._v("、"),s("strong",[t._v("默认规则")]),t._v(" 和 "),s("strong",[t._v("自定义规则")]),t._v("；尽管主要功能是通过 "),s("em",[t._v("建立默认规则")]),t._v(" 来对所有在已建立的默认条件下的实体进行级别设置，然后通过 "),s("em",[t._v("添加自定义规则的形式对默认规则进行异常规则")]),t._v("，在这些条件下可以建立一组条件，这些条件将在默认规则下应用更改。我们创建了预设规则部分，以便可以快速添加到默认规则或自定义规则中的任何经常引用的条件或设置，以帮助减小文件的大小，尽管你不必引用或包含预设规则部分，只要你已手动编写了条件和设置。")]),t._v(" "),s("h1",{attrs:{id:"默认规则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#默认规则"}},[t._v("#")]),t._v(" 默认规则")]),t._v(" "),s("p",[s("code",[t._v("rules.yml")]),t._v(" 文件中的 "),s("code",[t._v("default-rule:")]),t._v(" 部分建立了大多数实体级别设置的规则。这为 LevelledMobs 提供了一个基线，用于在设置实体属性和级别时进行工作。在默认配置下，我们充分利用 "),s("code",[t._v("presets:")]),t._v(" 部分来建立大多数的默认 "),s("code",[t._v("conditions:")]),t._v("。这些预设包括 "),s("code",[t._v("allowed_worlds")]),t._v("、"),s("code",[t._v("weighted_random_Levelling")]),t._v("、"),s("code",[t._v("average_challenge")]),t._v(" 和 "),s("code",[t._v("nametag_using_numbers")]),t._v("。如果你引用相同名称的 "),s("code",[t._v("presets:")]),t._v("，你将看到包括各种 "),s("code",[t._v("conditions:")]),t._v("、"),s("code",[t._v("strategies:")]),t._v(" 和 "),s("code",[t._v("apply-settings:")]),t._v("的这些预设。由于它们在 "),s("code",[t._v("default-rule:")]),t._v(" 中引用，因此每个这样的 "),s("code",[t._v("presets:")]),t._v(" 本质上都会被复制到 "),s("code",[t._v("default-rule:")]),t._v(" 中。如果在同一个默认规则下设置了相同的配置选项，则只会监听最后一个。")]),t._v(" "),s("p",[t._v("对于 "),s("code",[t._v("default-rule:")]),t._v("，你需要告诉 LevelledMobs 的最低要求是：你希望在哪些世界中应用 LevelledMobs，你希望使用哪种策略来设置实体的级别，以及你希望这些实体有多强大。次要设置包括诸如将名牌应用于实体以显示其更改后的属性和数值，或者设置限制从生成方块中获得级别的实体的条件。")]),t._v(" "),s("p",[t._v("一般来说，你希望你的 "),s("code",[t._v("default-rule:")]),t._v(" 尽可能地开放，以符合你对服务器的开放性。这一部分旨在从一开始限制 LevelledMobs 所做的更改，从特定世界中将其完全删除到建立总体使用的核心策略。不要担心，你可以通过自定义规则进行任何需要的更改。")]),t._v(" "),s("h1",{attrs:{id:"自定义规则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自定义规则"}},[t._v("#")]),t._v(" 自定义规则")]),t._v(" "),s("p",[s("code",[t._v("rules.yml")]),t._v(" 文件中的 "),s("code",[t._v("custom-rules:")]),t._v(" 部分建立了对默认规则的任何例外的规则。在默认配置下，我们使用了四个不同的自定义规则，这些规则提供了经过玩家测试的例外规则，我们认为这些规则有助于提高整体体验。每个规则都可以根据服务器的需要进行更改或删除。")]),t._v(" "),s("blockquote",[s("p",[t._v("CR - NoLevel 所有被动 + 实体类型")])]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("enabled")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'CR - NoLevel 所有被动 + 实体类型'")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("use-preset")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" allowed_worlds\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("conditions")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("entities")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("allowed-groups")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'all_passive_mobs'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("allowed-list")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'BABY_'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ENDER_DRAGON'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'WITHER'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'VILLAGER'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ZOMBIE_VILLAGER'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'WANDERING_TRADER'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'PHANTOM'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'BAT'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'RAVAGER'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'WARDEN'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apply-settings")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("maxLevel")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n")])])]),s("p",[t._v("默认情况下，选定的 "),s("code",[t._v("default-rule:")]),t._v(" 世界中的所有实体都会接收一个级别。\n第一个自定义规则设置了一个条件检查：所有属于“被动”组的实体，Minecraft 将这些实体视为鸡、猪、绵羊等实体，一些特定的实体（"),s("code",[t._v("'ENDER_DRAGON', 'WITHER', 'VILLAGER', 'ZOMBIE_VILLAGER', 'WANDERING_TRADER', 'PHANTOM', 'BAT', 'RAVAGER', 'WARDEN'")]),t._v("），以及所有 "),s("code",[t._v("BABY_")]),t._v(" 实体（代表所有幼年实体）。\n然后，我们告诉 LevelledMobs，如果出现这些实体中的任何一个，我们将设置 "),s("code",[t._v("maxLevel: 0")]),t._v("。当实体级别为 0 时，LevelledMobs 将不会受到任何更改的影响，被视为未受 LevelledMobs 影响的实体。\n之所以选择这些实体，原因各不相同，有些明显，有些不太明显。对我们来说，只有敌对实体受到级别设置是有意义的，我们取消了对像村民、僵尸村民、流浪商人等实体的级别设置，以保护它们的特性。然后还有像蝙蝠这样被视为“中立”生物的生物的生物，以及迷你Boss 、凋零使者和末影龙这样的“最终Boss”，让用户决定如何释放这些实体。")]),t._v(" "),s("blockquote",[s("p",[t._v("CR - 自定义下界级别设置")])]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("enabled")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'CR - 自定义下界级别设置'")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("conditions")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("worlds")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'world_nether'")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("strategies")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("y-coordinate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("start")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("end")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("40")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("period")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n")])])]),s("p",[t._v("默认情况下，选择的 "),s("code",[t._v("default-rule:")]),t._v(" 中的任何世界都将使用在其中建立的策略")]),t._v(" "),s("p",[t._v("来应用级别。虽然这是可以接受的，但考虑到下界世界更像是一个垂直地图，更改策略从 "),s("code",[t._v("weighted-random")]),t._v(" 更改为 "),s("code",[t._v("y-coordinate")]),t._v(" 会更有意义。通过此更改，下界中的所有实体都将遵循 "),s("code",[t._v("default-rule:")]),t._v("，但有一个例外，即更改要应用的策略。")]),t._v(" "),s("blockquote",[s("p",[t._v("CR - 自定义实体属性")])]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("enabled")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'CR - 自定义实体属性'")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("use-preset")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" allowed_worlds\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apply-settings")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("multipliers")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("custom-mob-level")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ENDERMAN")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("max-health")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("movement-speed")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("SILVERFISH")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("max-health")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("movement-speed")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("CREEPER")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("movement-speed")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.025")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("WITHER_SKELETON")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("max-health")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),t._v("\n")])])]),s("p",[t._v("默认情况下，根据 "),s("code",[t._v("default-rule:")]),t._v(" 下的级别设置，对任何实体进行级别设置将使用在那里建立的增益来确定属性更改的程度。一直以来，我们已经了解到某些对于普通服务器的异常情况应该进行设置。每个这些设置都可以根据你的需要进行更改或删除。\n此自定义规则使用了 "),s("code",[t._v("multipliers:")]),t._v(" "),s("code",[t._v("apply-settings:")]),t._v(" 的子部分，称为 "),s("code",[t._v("custom-mob-level:")]),t._v("，它允许你为特定实体建立默认增益（在默认的 "),s("code",[t._v("average_challenge")]),t._v(" 中建立）进行更改。")]),t._v(" "),s("p",[t._v("我们首先修改的实体是末影人，我们建立了这样的设置：当末影人受到级别设置时，不会更改其 "),s("code",[t._v("max-health:")]),t._v(" 和 "),s("code",[t._v("movement-speed:")]),t._v("。这样做的目的是，在标准环境中，当你攻击末影人时，它们通常会获得大量的移动速度和传送能力。如果将末影人完全设置为级别，生命值和移动速度的增加将使它们几乎不可能被杀死。这也有助于防止玩家建造的末影人农场被破坏的情况。\n第二个实体是蠹虫，出于类似的原因，取消了 "),s("code",[t._v("max-health:")]),t._v(" 和 "),s("code",[t._v("movement-speed:")]),t._v(" 的更改。\n第三个实体是爬行者，它的 "),s("code",[t._v("movement-speed:")]),t._v(" 设置了一个较低的上限。尤其是在级别设置时，爬行者可能具有挑战性。降低移动速度可以防止爬行者向玩家冲过来，从而使玩家在爆炸前有机会逃脱。\n第四个实体是凋零骷髅，其凋零能力使得即使在标准规则下也具有挑战性。这个调整的 "),s("code",[t._v("max-health:")]),t._v(" 有助于减轻这些实体的挑战难度，同时保持它们的增加的攻击伤害和移动速度等其他 "),s("code",[t._v("multipliers:")]),t._v("。")]),t._v(" "),s("blockquote",[s("p",[t._v("CR - 自定义僵尸猪灵级别设置")])]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("enabled")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'CR - 自定义僵尸猪灵级别设置'")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("conditions")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("worlds")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'world_nether'")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("entities")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ZOMBIFIED_PIGLIN'")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("strategies")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("random")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apply-settings")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("minLevel")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("maxLevel")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("multipliers")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("max-health")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("movement-speed")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.25")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("attack-damage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.5")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ranged-attack-damage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("item-drop")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.5")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("xp-drop")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tiered-coloring")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("1-5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'&#22E76B'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#绿色")]),t._v("\n")])])]),s("p",[t._v("默认情况下，如果不设置此规则，僵尸猪灵将像在此之前的下界中的任何其他敌对实体一样进行级别设置。僵尸猪灵是少数在受到攻击时会组成队伍反击的实体之一，特别是这类实体会形成一支小队，长时间追赶玩家。我们发现如果让僵尸猪灵根据 "),s("code",[t._v("default-rule:")]),t._v(" 的规则设置级别，它们将变得难以挑战，会使下界通常难以探索。\n在此自定义规则下，我们已经设置了在下界中的任何 "),s("code",[t._v("ZOMBIFIED_PIGLIN")]),t._v(" 进行条件检查。这些实体将采用其 "),s("code",[t._v("default-rule:")]),t._v(" 的增益，并将这些值替换为此自定义规则中建立的值；所有这些值都低于默认的调整。我们还提供了一个独特的 "),s("code",[t._v("tiered-coloring:")]),t._v("，它调整了名牌中的 "),s("code",[t._v("%tiered%")]),t._v(" 输出；这只是一种纯粹的外观变化。")]),t._v(" "),s("p",[t._v("这些自定义规则提供了对实体级别设置的精细控制，允许服务器管理员根据其所需的游戏体验进行级别设置。")]),t._v(" "),s("p",[t._v("如果你有任何具体问题或需要进一步澄清有关 LevelledMobs 配置的任何方面，请告诉我。")])])}),[],!1,null,null,null);s.default=n.exports}}]);